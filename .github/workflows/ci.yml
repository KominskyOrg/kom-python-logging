name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      pipenv-cache: ${{ steps.pipenv-cache.outputs.cache-hit }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pipenv
      run: pip install pipenv

    - name: Cache pipenv
      id: pipenv-cache
      uses: actions/cache@v4
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-

    - name: Install dependencies
      run: pipenv install --dev
      if: steps.pipenv-cache.outputs.cache-hit != 'true'

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Restore pipenv cache
      uses: actions/cache@v4
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Build package
      run: pipenv run make build

    - name: Cache build
      uses: actions/cache@v4
      with:
        path: |
          dist
          build
          *.egg-info
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: |
          dist
          build
          *.egg-info
        key: ${{ runner.os }}-build-${{ github.sha }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Run linter
      run: pipenv run make lint

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: |
          dist
          build
          *.egg-info
        key: ${{ runner.os }}-build-${{ github.sha }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Run tests
      run: pipenv run make test

  clean:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: |
          dist
          build
          *.egg-info
        key: ${{ runner.os }}-build-${{ github.sha }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Clean up
      run: pipenv run make clean

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: |
          dist
          build
          *.egg-info
        key: ${{ runner.os }}-build-${{ github.sha }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Release package
      run: pipenv run make release
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.GH_TOKEN }}
